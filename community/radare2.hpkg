(use ../prelude)
(import ../core)
(use ./capstone)
(use ./file)
(use ./xxhash)
(use ./zlib)
(use ./lzip)
(use ./openssl)
(use ./libuv)
(use ./python3)
(use ./cmake)
(use ./ninja)
(use ./meson)

# XXX bundled tree-sitter.

(defsrc radare2-src
  :file-name
  "radare2-4.4.0.tar.gz"
  :url
  "https://github.com/radareorg/radare2/archive/4.4.0.tar.gz"
  :hash
  "sha256:401ab89f39f7e70e03336f6890dc4fdf52dae4f61201e4cd8a1fbe5a4b9eb451")

(defpkg radare2
  :builder
  (fn []
    (os/setenv "PKG_CONFIG_PATH"
               (string
                (join-pkg-paths ":" "/lib64/pkgconfig"
                                [libuv])
                ":"
                (join-pkg-paths ":" "/lib/pkgconfig"
                                [capstone zlib openssl]))
               )
    (os/setenv "PATH"
               (join-pkg-paths ":" "/bin"
                               [core/coreutils
                                core/gcc
                                core/grep
                                core/make
                                core/patch
                                core/sed
                                core/awk
                                meson
                                cmake
                                python3
                                ninja
                                core/pkgconf]))
    (core/link-/bin/sh)
    (unpack-src radare2-src)
    # (repl nil nil (fiber/getenv (fiber/current)))
    (os/setenv "CFLAGS"
               (string *default-cflags*
                       " "
                       "-I" (capstone :path) "/include"
                       " "
                       "-I" (file :path) "/include"
                       " "
                       "-I" (xxhash :path) "/include"
                       " "
                       "-I" (openssl :path) "/include"
                       " "
                       "-I" (lzip :path) "/include"
                       " "
                       "-I" (libuv :path) "/include"
                       " "
                       (sh/$<_ pkg-config --cflags capstone)))
    (os/setenv "LDFLAGS"
               (string *default-ldflags*
                       " "
                       "-L" (capstone :path) "/lib"
                       " "
                       "-L" (file :path) "/lib"
                       " "
                       "-L" (xxhash :path) "/lib"
                       " "
                       "-L" (openssl :path) "/lib"
                       " "
                       "-L" (lzip :path) "/lib"
                       " "
                       "-L" (libuv :path) "/lib64"
                       " "
                       "-Wl,-rpath=" (join-pkg-paths ":" "/lib"
                                                     [capstone file libuv])
                       " "
                       (sh/$<_ pkg-config --libs capstone)))


    (sh/$ meson
          --prefix= ^ (dyn :pkg-out)
          -Duse_sys_capstone=true
          -Duse_sys_magic=true
          -Duse_sys_xxhash=true
          -Duse_sys_zip=true
          -Duse_sys_zlib=true
          -Duse_sys_openssl=true
          (dyn :pkg-out))

    (sh/$ ninja -C
          (dyn :pkg-out)
          install)
    ))
